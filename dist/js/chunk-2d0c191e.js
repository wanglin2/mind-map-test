(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0c191e"],{4738:function(s,v,e){"use strict";e.r(v);var t=function(){var s=this;s._self._c;return s._m(0)},_=[function(){var s=this,v=s._self._c;return v("div",[v("h1",[s._v("内置工具方法")]),v("h2",[s._v("基础工具方法")]),v("p",[s._v("引用：")]),v("pre",{staticClass:"hljs"},[v("code",[v("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v(" {walk, ...} "),v("span",{staticClass:"hljs-keyword"},[s._v("from")]),s._v(" "),v("span",{staticClass:"hljs-string"},[s._v("'simple-mind-map/src/utils'")]),s._v("\n")])]),v("h3",[s._v("方法")]),v("h4",[s._v("resizeImgSizeByOriginRatio(width, height, newWidth, newHeight)")]),v("blockquote",[v("p",[s._v("v0.6.5+")])]),v("p",[v("code",[s._v("width")]),s._v(": 图片原始的宽度")]),v("p",[v("code",[s._v("height")]),s._v("：图片原始的高度")]),v("p",[v("code",[s._v("newWidth")]),s._v("：要缩放到的宽度")]),v("p",[v("code",[s._v("newHeight")]),s._v("：要缩放到的高度")]),v("p",[s._v("按比例缩放图片。在保持图片原始宽高比的情况下缩放到指定的"),v("code",[s._v("newWidth")]),s._v("、"),v("code",[s._v("newHeight")]),s._v("大小。")]),v("h4",[s._v("walk(root, parent, beforeCallback, afterCallback, isRoot, layerIndex = 0, index = 0)")]),v("p",[s._v("深度优先遍历树")]),v("p",[v("code",[s._v("root")]),s._v("：要遍历的树的根节点")]),v("p",[v("code",[s._v("parent")]),s._v("：父节点")]),v("p",[v("code",[s._v("beforeCallback")]),s._v("：前序遍历回调函数，回调参数为：root, parent, isRoot, layerIndex, index")]),v("p",[v("code",[s._v("afterCallback")]),s._v("：后序遍历回调函数，回调参数为：root, parent, isRoot, layerIndex, index")]),v("p",[v("code",[s._v("isRoot")]),s._v("：是否是根节点")]),v("p",[v("code",[s._v("layerIndex")]),s._v("：节点层级")]),v("p",[v("code",[s._v("index")]),s._v("：节点在同级节点里的索引")]),v("p",[s._v("示例：")]),v("pre",{staticClass:"hljs"},[v("code",[s._v("walk(tree, "),v("span",{staticClass:"hljs-literal"},[s._v("null")]),s._v(", "),v("span",{staticClass:"hljs-function"},[s._v("() =>")]),s._v(" {}, "),v("span",{staticClass:"hljs-function"},[s._v("() =>")]),s._v(" {}, "),v("span",{staticClass:"hljs-literal"},[s._v("false")]),s._v(", "),v("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(", "),v("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(")\n")])]),v("h4",[s._v("bfsWalk(root, callback)")]),v("p",[s._v("广度优先遍历树")]),v("h4",[s._v("resizeImgSize(width, height, maxWidth, maxHeight)")]),v("p",[s._v("缩放图片的尺寸")]),v("p",[v("code",[s._v("width")]),s._v("：图片原本的宽")]),v("p",[v("code",[s._v("height")]),s._v("：图片原本的高")]),v("p",[v("code",[s._v("maxWidth")]),s._v("：要缩放到的宽")]),v("p",[v("code",[s._v("maxHeight")]),s._v("：要缩放到的高")]),v("p",[v("code",[s._v("maxWidth")]),s._v("和"),v("code",[s._v("maxHeight")]),s._v("可以同时都传，也可以只传一个")]),v("h4",[s._v("resizeImg(imgUrl, maxWidth, maxHeight)")]),v("p",[s._v("缩放图片，内部先加载图片，然后调用"),v("code",[s._v("resizeImgSize")]),s._v("方法，返回一个"),v("code",[s._v("promise")])]),v("h4",[s._v("simpleDeepClone(data)")]),v("p",[s._v("极简的深拷贝方法，只能针对全是基本数据的对象，否则会报错")]),v("h4",[s._v("copyRenderTree(tree, root)")]),v("p",[s._v("复制渲染树数据，示例：")]),v("pre",{staticClass:"hljs"},[v("code",[s._v("copyRenderTree({}, "),v("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".mindMap.renderer.renderTree)\n")])]),v("h4",[s._v("copyNodeTree(tree, root, removeActiveState, keepId)")]),v("ul",[v("li",[v("p",[v("code",[s._v("removeActiveState")]),s._v("："),v("code",[s._v("Boolean")]),s._v("，默认为"),v("code",[s._v("false")]),s._v("，是否移除节点的激活状态")])]),v("li",[v("p",[v("code",[s._v("keepId")]),s._v("：v0.4.6+，"),v("code",[s._v("Boolean")]),s._v("，默认为"),v("code",[s._v("false")]),s._v("，是否保留被复制节点的"),v("code",[s._v("id")]),s._v("，默认会删除"),v("code",[s._v("id")]),s._v("防止节点"),v("code",[s._v("id")]),s._v("重复，但是对于移动节点的场景，节点原"),v("code",[s._v("id")]),s._v("需要保留")])])]),v("p",[s._v("复制节点树数据，主要是剔除其中的引用"),v("code",[s._v("node")]),s._v("实例的"),v("code",[s._v("_node")]),s._v("，然后复制"),v("code",[s._v("data")]),s._v("对象的数据，示例：")]),v("pre",{staticClass:"hljs"},[v("code",[s._v("copyNodeTree({}, node)\n")])]),v("h4",[s._v("imgToDataUrl(src)")]),v("p",[s._v("图片转成dataURL")]),v("h4",[s._v("downloadFile(file, fileName)")]),v("p",[s._v("下载文件")]),v("h4",[s._v("throttle(fn, time = 300, ctx)")]),v("p",[s._v("节流函数")]),v("h4",[s._v("asyncRun(taskList, callback = () => {})")]),v("p",[s._v("异步执行任务队列，多个任务是同步执行的，没有先后顺序")]),v("h4",[s._v("degToRad(deg)")]),v("blockquote",[v("p",[s._v("v0.2.24+")])]),v("p",[s._v("角度转弧度")]),v("h4",[s._v("camelCaseToHyphen(str)")]),v("blockquote",[v("p",[s._v("v0.2.24+")])]),v("p",[s._v("驼峰转连字符")]),v("h4",[s._v("joinFontStr({ italic, bold, fontSize, fontFamily })")]),v("blockquote",[v("p",[s._v("v0.3.4+")])]),v("p",[s._v("拼接"),v("code",[s._v("css")]),s._v("字体的"),v("code",[s._v("font")]),s._v("属性值")]),v("h4",[s._v("measureText(text, { italic, bold, fontSize, fontFamily })")]),v("blockquote",[v("p",[s._v("v0.3.4+")])]),v("p",[s._v("测量文本的宽高，返回值：")]),v("pre",{staticClass:"hljs"},[v("code",[s._v("{ width, height }\n")])]),v("h4",[s._v("getTextFromHtml(html)")]),v("p",[s._v("提取html字符串里的纯文本内容。")]),v("h4",[s._v("readBlob(blob)")]),v("blockquote",[v("p",[s._v("v0.5.9+")])]),v("p",[s._v("将"),v("code",[s._v("blob")]),s._v("数据转成"),v("code",[s._v("data:url")]),s._v("数据。")]),v("h4",[s._v("parseDataUrl(data)")]),v("blockquote",[v("p",[s._v("v0.6.6+")])]),v("p",[s._v("解析"),v("code",[s._v("data:url")]),s._v("数据，返回：")]),v("pre",{staticClass:"hljs"},[v("code",[s._v("{\n  type,"),v("span",{staticClass:"hljs-comment"},[s._v("// 数据的文件类型")]),s._v("\n  base64"),v("span",{staticClass:"hljs-comment"},[s._v("// base64数据")]),s._v("\n}\n")])]),v("h4",[s._v("getImageSize(src)")]),v("blockquote",[v("p",[s._v("v0.6.6+")])]),v("ul",[v("li",[v("code",[s._v("src")]),s._v("：图片的url")])]),v("p",[s._v("获取图片的大小。返回：")]),v("pre",{staticClass:"hljs"},[v("code",[s._v("{\n  width,\n  height\n}\n")])]),v("h4",[s._v("loadImage(imgFile)")]),v("blockquote",[v("p",[s._v("v0.6.8+")])]),v("ul",[v("li",[v("code",[s._v("imgFile")]),s._v("：图片类型的File对象")])]),v("p",[s._v("加载图片，返回：")]),v("pre",{staticClass:"hljs"},[v("code",[s._v("{\n  url,"),v("span",{staticClass:"hljs-comment"},[s._v("// DataUrl")]),s._v("\n  size"),v("span",{staticClass:"hljs-comment"},[s._v("// { width, height } 图片宽高")]),s._v("\n}\n")])]),v("h4",[s._v("getType(data)")]),v("blockquote",[v("p",[s._v("v0.6.9+")])]),v("p",[s._v("获取一个数据的类型，比如"),v("code",[s._v("Boolean")]),s._v("、"),v("code",[s._v("Array")]),s._v("等。")]),v("h4",[s._v("removeHtmlStyle(html)")]),v("blockquote",[v("p",[s._v("v0.6.10+")])]),v("p",[s._v("移除html字符串中节点的内联样式。")]),v("h4",[s._v("addHtmlStyle(html, tag, style)")]),v("blockquote",[v("p",[s._v("v0.6.10+")])]),v("p",[s._v("给html标签中指定的标签添加内联样式。")]),v("h4",[s._v("checkIsRichText(str)")]),v("blockquote",[v("p",[s._v("v0.6.10+")])]),v("p",[s._v("检查一个字符串是否是富文本字符。")]),v("h4",[s._v("isWhite(color)")]),v("blockquote",[v("p",[s._v("v0.6.11+")])]),v("p",[s._v("判断一个颜色是否是白色。")]),v("h4",[s._v("isTransparent(color)")]),v("blockquote",[v("p",[s._v("v0.6.11+")])]),v("p",[s._v("判断一个颜色是否是透明。")]),v("h4",[s._v("nodeRichTextToTextWithWrap(html)")]),v("blockquote",[v("p",[s._v("v0.6.12+")])]),v("p",[s._v("将"),v("code",[s._v("<p><span></span><p>")]),s._v("形式的节点富文本内容转换成"),v("code",[s._v("\\n")]),s._v("换行的文本。")]),v("h4",[s._v("textToNodeRichTextWithWrap(html)")]),v("blockquote",[v("p",[s._v("v0.6.12+")])]),v("p",[s._v("将"),v("code",[s._v("<br>")]),s._v("换行的文本转换成"),v("code",[s._v("<p><span></span><p>")]),s._v("形式的节点富文本内容。")]),v("h4",[s._v("isMobile()")]),v("blockquote",[v("p",[s._v("v0.6.13+")])]),v("p",[s._v("判断是否是移动端环境。")]),v("h4",[s._v("getTopAncestorsFomNodeList(list)")]),v("blockquote",[v("p",[s._v("v0.7.2+")])]),v("ul",[v("li",[v("code",[s._v("list")]),s._v("：Arrray，节点实例列表。")])]),v("p",[s._v("从节点实例列表里找出最顶层的节点列表。")]),v("h4",[s._v("checkTwoRectIsOverlap(minx1, maxx1, miny1, maxy1, minx2, maxx2, miny2, maxy2)")]),v("blockquote",[v("p",[s._v("v0.7.2+")])]),v("p",[s._v("参数为两个矩形的位置。")]),v("p",[s._v("判断两个矩形是否重叠。")]),v("h4",[s._v("focusInput(el)")]),v("blockquote",[v("p",[s._v("v0.7.2+")])]),v("ul",[v("li",[v("code",[s._v("el")]),s._v("：DOM节点，可聚焦的元素，一般为输入框元素。")])]),v("p",[s._v("聚焦指定输入框。")]),v("h4",[s._v("selectAllInput(el)")]),v("blockquote",[v("p",[s._v("v0.7.2+")])]),v("ul",[v("li",[v("code",[s._v("el")]),s._v("：DOM节点，可聚焦的元素，一般为输入框元素。")])]),v("p",[s._v("聚焦并全选指定输入框。")]),v("h4",[s._v("addDataToAppointNodes(appointNodes, data = {})")]),v("blockquote",[v("p",[s._v("v0.7.2+")])]),v("ul",[v("li",[v("p",[v("code",[s._v("appointNodes")]),s._v("：节点实例列表，数组类型。")])]),v("li",[v("p",[v("code",[s._v("data")]),s._v("：要附加到指定节点实例列表树中所有节点的数据中的数据。")])])]),v("p",[s._v("给指定的节点列表树数据添加附加数据，会修改原数据。")]),v("h4",[s._v("createUidForAppointNodes(appointNodes)")]),v("blockquote",[v("p",[s._v("v0.7.2+")])]),v("ul",[v("li",[v("code",[s._v("appointNodes")]),s._v("：节点实例列表，数组类型。")])]),v("p",[s._v("给指定的节点列表树数据添加uid（如果uid不存在的话），会修改原数据。")]),v("h4",[s._v("getNodeIndex(node)")]),v("blockquote",[v("p",[s._v("v0.7.2+")])]),v("ul",[v("li",[v("code",[s._v("node")]),s._v("：节点实例。")])]),v("p",[s._v("获取节点在同级里的位置索引。")]),v("h4",[s._v("mergerIconList(list)")]),v("blockquote",[v("p",[s._v("v0.7.2+")])]),v("ul",[v("li",[v("code",[s._v("list")]),s._v("：要合并到库内部的节点图标数组。")])]),v("pre",{staticClass:"hljs"},[v("code",[v("span",{staticClass:"hljs-comment"},[s._v("// const data = [")]),s._v("\n"),v("span",{staticClass:"hljs-comment"},[s._v("//   { type: 'priority', name: '优先级图标', list: [{ name: '1', icon: 'a' }, { name: 2, icon: 'b' }] },")]),s._v("\n"),v("span",{staticClass:"hljs-comment"},[s._v("//   { type: 'priority', name: '优先级图标', list: [{ name: '2', icon: 'c' }, { name: 3, icon: 'd' }] },")]),s._v("\n"),v("span",{staticClass:"hljs-comment"},[s._v("// ];")]),s._v("\n\n"),v("span",{staticClass:"hljs-comment"},[s._v("// mergerIconList(data) 结果")]),s._v("\n\n"),v("span",{staticClass:"hljs-comment"},[s._v("// [")]),s._v("\n"),v("span",{staticClass:"hljs-comment"},[s._v("//   { type: 'priority', name: '优先级图标', list: [{ name: '1', icon: 'a' }, { name: 2, icon: 'c' }, { name: 3, icon: 'd' }] },")]),s._v("\n"),v("span",{staticClass:"hljs-comment"},[s._v("// ]")]),s._v("\n")])]),v("p",[s._v("合并图标数组。")]),v("h4",[s._v("generateColorByContent(str)")]),v("blockquote",[v("p",[s._v("v0.7.2+")])]),v("ul",[v("li",[v("code",[s._v("str")]),s._v("：字符串。")])]),v("p",[s._v("根据传入的内容生成颜色，同样的内容会生成同样的颜色。")]),v("h4",[s._v("htmlEscape(str)")]),v("blockquote",[v("p",[s._v("v0.7.2+")])]),v("ul",[v("li",[v("code",[s._v("str")]),s._v("：字符串。")])]),v("p",[s._v("转义传入的字符串，目前会转义如下三个字符：")]),v("pre",{staticClass:"hljs"},[v("code",[s._v("& -> &amp;\n< -> &lt;\n> -> &gt;\n")])]),v("h2",[s._v("在canvas中模拟css的背景属性")]),v("p",[s._v("引入：")]),v("pre",{staticClass:"hljs"},[v("code",[v("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v(" drawBackgroundImageToCanvas "),v("span",{staticClass:"hljs-keyword"},[s._v("from")]),s._v(" "),v("span",{staticClass:"hljs-string"},[s._v("'simple-mind-map/src/utils/simulateCSSBackgroundInCanvas'")]),s._v("\n")])]),v("p",[s._v("使用：")]),v("pre",{staticClass:"hljs"},[v("code",[v("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" width = "),v("span",{staticClass:"hljs-number"},[s._v("500")]),s._v("\n"),v("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" height = "),v("span",{staticClass:"hljs-number"},[s._v("500")]),s._v("\n"),v("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" img = "),v("span",{staticClass:"hljs-string"},[s._v("'/1.jpg'")]),s._v("\n"),v("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" canvas = "),v("span",{staticClass:"hljs-built_in"},[s._v("document")]),s._v(".createElement("),v("span",{staticClass:"hljs-string"},[s._v("'canvas'")]),s._v(")\ncanvas.width = width\ncanvas.height = height\ndrawBackgroundImageToCanvas(ctx, width, height, img, {\n  "),v("span",{staticClass:"hljs-attr"},[s._v("backgroundRepeat")]),s._v(": "),v("span",{staticClass:"hljs-string"},[s._v("'repeat-y'")]),s._v(",\n  "),v("span",{staticClass:"hljs-attr"},[s._v("backgroundSize")]),s._v(": "),v("span",{staticClass:"hljs-string"},[s._v("'60%'")]),s._v(",\n  "),v("span",{staticClass:"hljs-attr"},[s._v("backgroundPosition")]),s._v(": "),v("span",{staticClass:"hljs-string"},[s._v("'center center'")]),s._v("\n}, "),v("span",{staticClass:"hljs-function"},[s._v("("),v("span",{staticClass:"hljs-params"},[s._v("err")]),s._v(") =>")]),s._v(" {\n  "),v("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (err) {\n    "),v("span",{staticClass:"hljs-comment"},[s._v("// 失败")]),s._v("\n  } "),v("span",{staticClass:"hljs-keyword"},[s._v("else")]),s._v(" {\n    "),v("span",{staticClass:"hljs-comment"},[s._v("// 成功")]),s._v("\n  }\n})\n")])]),v("h2",[s._v("LRU缓存类")]),v("blockquote",[v("p",[s._v("v0.5.10+")])]),v("p",[s._v("引入：")]),v("pre",{staticClass:"hljs"},[v("code",[v("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v(" Lru "),v("span",{staticClass:"hljs-keyword"},[s._v("from")]),s._v(" "),v("span",{staticClass:"hljs-string"},[s._v("'simple-mind-map/src/utils/Lru.js'")]),s._v("\n")])]),v("h3",[s._v("构造函数")]),v("pre",{staticClass:"hljs"},[v("code",[v("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" lru = "),v("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" Lru(max)\n")])]),v("p",[v("code",[s._v("max")]),s._v("：指定最大缓存数量。")]),v("h3",[s._v("实例属性")]),v("h4",[s._v("size")]),v("p",[s._v("当前缓存的数量。")]),v("h4",[s._v("pool")]),v("p",[s._v("获取缓存池。")]),v("h3",[s._v("实例方法")]),v("h4",[s._v("add(key, value)")]),v("p",[s._v("添加缓存。")]),v("h4",[s._v("delete(key)")]),v("p",[s._v("删除指定缓存。")]),v("h4",[s._v("has(key)")]),v("p",[s._v("检查某个缓存是否存在。")]),v("h4",[s._v("get(key)")]),v("p",[s._v("获取某个缓存的值。")])])}],a={},l=a,o=e("2877"),n=Object(o["a"])(l,t,_,!1,null,null,null);v["default"]=n.exports}}]);